/***** CREATE TABLE 실습 *****/

--고객 테이블 CUSTOMER 
CREATE TABLE CUSTOMER (

CUSTOMER_ID NUMBER(10,0) PRIMARY KEY ,-- 기본키,
CUSTOMER_NAME VARCHAR2(100) NOT NULL,-- 널이 아님
CUSTOMER_EMAIL VARCHAR2(100)CONSTRAINT U_CU UNIQUE , --방법1 중복허용X
CUSTOMER_PHONE VARCHAR2(20) ,
CONSTRAINT U_CP UNIQUE(CUSTOMER_PHONE), --방법2 중복허용X
CUSTOMER_ADDRESS VARCHAR2(255) -- 고객 주소 작성 
);


COMMENT ON COLUMN CUSTOMER.CUSTOMER_ID IS '고객 아이디';
COMMENT ON COLUMN CUSTOMER.CUSTOMER_NAME IS '고객 이름';
COMMENT ON COLUMN CUSTOMER.CUSTOMER_EMAIL IS '고객 이메일';
COMMENT ON COLUMN CUSTOMER.CUSTOMER_PHONE IS '고객 핸드폰';
COMMENT ON COLUMN CUSTOMER.CUSTOMER_ADDRESS IS '고객 주소';

COMMIT;

-- PRODUCT 테이블 생성
-- PRODUCT_ID NUMBER(10,0)기본키
-- PRODUCT_NAME VARCHAR(100) NULL 사용 불가 
-- PRODUCT_PRICAE NUMBER(소수점 2번째 자리까지 허용) NULL 사용 불가
-- PRODUCT_DESC VARCHER(200) -- 중복안되는 특별한 값 설정

CREATE TABLE PRODUCT (
    PRODUCT_ID NUMBER(10,0) PRIMARY KEY ,
    PRODUCT_NAME VARCHAR2(100) NOT NULL ,
    PRODUCT_PRICE NUMBER(10,2) NOT NULL , 
    PRODUCT_DESC VARCHAR2(200) CONSTRAINT P_DU UNIQUE
    );

--PRODUCT 값 추가 
-- 아메리카노 3000 신선한 원두로 만든 아메리카노 
-- 카페라데 2500 부드러운 우유가 들어간 라떼 
-- 카푸치노 3500 진한 커피와 거품이 어우러진 카푸치노 
-- 카라멜 마끼아또 4000 달콤한 카라멜 시럽이 들어간 마키아토

INSERT INTO PRODUCT 
VALUES (1,'아메리카노' , 3000 , '신선한 원두로 만든 아메리카노');
INSERT INTO PRODUCT 
VALUES (2,'카페라떼' , 2500 , '부드러운 우유가 들어간 라떼');
INSERT INTO PRODUCT 
VALUES (3,'카푸치노' , 3500 , '진한 커피와 거품이 어우러진 카푸치노 ');
INSERT INTO PRODUCT 
VALUES (4,'카라멜 마끼아또' , 4000 , '달콤한 카라멜 시럽이 들어간 마키아토');

--FOOD_COMPANY TABLE 생성 
CREATE TABLE FOOD_COMPANY(
 COMPANY_ID NUMBER(10,0) PRIMARY KEY, -- 회사 ID 기본키
 COMPANY_NAME VARCHAR2(100) NOT NULL, --회사 이름 (NULL 불가)
 COMPANY_ADDRESS VARCHAR2(255), --회사주소
 COMPANY_PHONE VARCHAR2(20) -- 회사주소 전화번호
); 

-- SNACKS 테이블 생성
CREATE TABLE SNACKS (
SNACK_ID NUMBER(10,0)PRIMARY KEY,
SNACK_NAME VARCHAR2(100) NOT NULL,
PRICE NUMBER(10,2) NOT NULL, 
COMPANY_ID NUMBER(10,0), --> 핵심 포인트
CONSTRAINT FK_COMPANY FOREIGN KEY (COMPANY_ID)
REFERENCES FOOD_COMPANY(COMPANY_ID) 
ON DELETE CASCADE 
-- FOOD_COMPANY이 회사 ID ON DELETE CASCADE -- 부모삭제시 자식까지 삭제 
);
--> ABCDEF FOREIGN KEY 키를 찾모할 변수명 
--> 참조할 변수명 FK__COMPANY3 규칙명 작성해주는데 규칙명은 모든 테이블 합쳐서 동일한 이름 쓸수 없음
